// This code was autogenerated with `dbus-codegen-rust -r --file ./interfaces_you_implement.xml -o you_impl.rs`, see https://github.com/diwic/dbus-rs
use dbus as dbus;
#[allow(unused_imports)]
use dbus::arg;
use dbus_crossroads as crossroads;

pub trait OrgFreedesktopIBusService {
    fn destroy(&mut self) -> Result<(), dbus::MethodErr>;
}

pub fn register_org_freedesktop_ibus_service<T>(cr: &mut crossroads::Crossroads) -> crossroads::IfaceToken<T>
where T: OrgFreedesktopIBusService + Send + 'static
{
    cr.register("org.freedesktop.IBus.Service", |b| {
        b.method("Destroy", (), (), |_, t: &mut T, ()| {
            t.destroy()
        });
    })
}