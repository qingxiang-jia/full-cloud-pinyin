// This code was autogenerated with `dbus-codegen-rust -r --file ./interfaces_you_implement.xml -o you_impl.rs`, see https://github.com/diwic/dbus-rs
use dbus as dbus;
#[allow(unused_imports)]
use dbus::arg;
use dbus_crossroads as crossroads;

pub trait IBusFactory {
    fn create_engine(&mut self, name: String) -> Result<dbus::Path<'static>, dbus::MethodErr>;
}

pub fn register_org_freedesktop_ibus_factory<T>(cr: &mut crossroads::Crossroads) -> crossroads::IfaceToken<T>
where T: IBusFactory + Send + 'static
{
    cr.register("org.freedesktop.IBus.Factory", |b| {
        b.method("CreateEngine", ("name",), ("",), |_, t: &mut T, (name,)| {
            t.create_engine(name,)
                .map(|x| (x,))
        });
    })
}