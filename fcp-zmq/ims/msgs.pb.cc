// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgs.proto

#include "msgs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UpdateSessionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : in_session_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSessionStatus::UpdateSessionStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateSessionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSessionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSessionStatusDefaultTypeInternal() {}
  union {
    UpdateSessionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSessionStatusDefaultTypeInternal _UpdateSessionStatus_default_instance_;

inline constexpr UpdatePreedit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdatePreedit::UpdatePreedit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdatePreeditDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePreeditDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePreeditDefaultTypeInternal() {}
  union {
    UpdatePreedit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePreeditDefaultTypeInternal _UpdatePreedit_default_instance_;

inline constexpr UpdateCandidates::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : candidates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCandidates::UpdateCandidates(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateCandidatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCandidatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCandidatesDefaultTypeInternal() {}
  union {
    UpdateCandidates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCandidatesDefaultTypeInternal _UpdateCandidates_default_instance_;

inline constexpr FcitxEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_{static_cast< ::KeyEvent >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FcitxEvent::FcitxEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FcitxEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FcitxEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FcitxEventDefaultTypeInternal() {}
  union {
    FcitxEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FcitxEventDefaultTypeInternal _FcitxEvent_default_instance_;

inline constexpr CommitText::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommitText::CommitText(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommitTextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitTextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitTextDefaultTypeInternal() {}
  union {
    CommitText _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitTextDefaultTypeInternal _CommitText_default_instance_;

inline constexpr CommandToFcitx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : command_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CommandToFcitx::CommandToFcitx(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandToFcitxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandToFcitxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandToFcitxDefaultTypeInternal() {}
  union {
    CommandToFcitx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandToFcitxDefaultTypeInternal _CommandToFcitx_default_instance_;
static ::_pb::Metadata file_level_metadata_msgs_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_msgs_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_msgs_2eproto = nullptr;
const ::uint32_t TableStruct_msgs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_.command_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CommitText, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CommitText, _impl_.text_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdatePreedit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdatePreedit, _impl_.text_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdateSessionStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdateSessionStatus, _impl_.in_session_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdateCandidates, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdateCandidates, _impl_.candidates_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::FcitxEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::FcitxEvent, _impl_.event_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::CommandToFcitx)},
        {13, -1, -1, sizeof(::CommitText)},
        {22, -1, -1, sizeof(::UpdatePreedit)},
        {31, -1, -1, sizeof(::UpdateSessionStatus)},
        {40, -1, -1, sizeof(::UpdateCandidates)},
        {49, -1, -1, sizeof(::FcitxEvent)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CommandToFcitx_default_instance_._instance,
    &::_CommitText_default_instance_._instance,
    &::_UpdatePreedit_default_instance_._instance,
    &::_UpdateSessionStatus_default_instance_._instance,
    &::_UpdateCandidates_default_instance_._instance,
    &::_FcitxEvent_default_instance_._instance,
};
const char descriptor_table_protodef_msgs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nmsgs.proto\"\320\001\n\016CommandToFcitx\0225\n\025updat"
    "e_session_status\030\001 \001(\0132\024.UpdateSessionSt"
    "atusH\000\022\"\n\013commit_text\030\002 \001(\0132\013.CommitText"
    "H\000\022(\n\016update_preedit\030\003 \001(\0132\016.UpdatePreed"
    "itH\000\022.\n\021update_candidates\030\004 \001(\0132\021.Update"
    "CandidatesH\000B\t\n\007command\"\032\n\nCommitText\022\014\n"
    "\004text\030\001 \001(\t\"\035\n\rUpdatePreedit\022\014\n\004text\030\001 \001"
    "(\t\")\n\023UpdateSessionStatus\022\022\n\nin_session\030"
    "\001 \001(\010\"&\n\020UpdateCandidates\022\022\n\ncandidates\030"
    "\001 \003(\t\"&\n\nFcitxEvent\022\030\n\005event\030\001 \001(\0162\t.Key"
    "Event*\370\007\n\010KeyEvent\022\t\n\005NUM_0\020\000\022\t\n\005NUM_1\020\001"
    "\022\t\n\005NUM_2\020\002\022\t\n\005NUM_3\020\003\022\t\n\005NUM_4\020\004\022\t\n\005NUM"
    "_5\020\005\022\t\n\005NUM_6\020\006\022\t\n\005NUM_7\020\007\022\t\n\005NUM_8\020\010\022\t\n"
    "\005NUM_9\020\t\022\t\n\005A_LWR\020d\022\t\n\005B_LWR\020e\022\t\n\005C_LWR\020"
    "f\022\t\n\005D_LWR\020g\022\t\n\005E_LWR\020h\022\t\n\005F_LWR\020i\022\t\n\005G_"
    "LWR\020j\022\t\n\005H_LWR\020k\022\t\n\005I_LWR\020l\022\t\n\005J_LWR\020m\022\t"
    "\n\005K_LWR\020n\022\t\n\005L_LWR\020o\022\t\n\005M_LWR\020p\022\t\n\005N_LWR"
    "\020q\022\t\n\005O_LWR\020r\022\t\n\005P_LWR\020s\022\t\n\005Q_LWR\020t\022\t\n\005R"
    "_LWR\020u\022\t\n\005S_LWR\020v\022\t\n\005T_LWR\020w\022\t\n\005U_LWR\020x\022"
    "\t\n\005V_LWR\020y\022\t\n\005W_LWR\020z\022\t\n\005X_LWR\020{\022\t\n\005Y_LW"
    "R\020|\022\t\n\005Z_LWR\020}\022\n\n\005A_UPR\020\310\001\022\n\n\005B_UPR\020\311\001\022\n"
    "\n\005C_UPR\020\312\001\022\n\n\005D_UPR\020\313\001\022\n\n\005E_UPR\020\314\001\022\n\n\005F_"
    "UPR\020\315\001\022\n\n\005G_UPR\020\316\001\022\n\n\005H_UPR\020\317\001\022\n\n\005I_UPR\020"
    "\320\001\022\n\n\005J_UPR\020\321\001\022\n\n\005K_UPR\020\322\001\022\n\n\005L_UPR\020\323\001\022\n"
    "\n\005M_UPR\020\324\001\022\n\n\005N_UPR\020\325\001\022\n\n\005O_UPR\020\326\001\022\n\n\005P_"
    "UPR\020\327\001\022\n\n\005Q_UPR\020\330\001\022\n\n\005R_UPR\020\331\001\022\n\n\005S_UPR\020"
    "\332\001\022\n\n\005T_UPR\020\333\001\022\n\n\005U_UPR\020\334\001\022\n\n\005V_UPR\020\335\001\022\n"
    "\n\005W_UPR\020\336\001\022\n\n\005X_UPR\020\337\001\022\n\n\005Y_UPR\020\340\001\022\n\n\005Z_"
    "UPR\020\341\001\022\t\n\005COMMA\020\n\022\n\n\006PERIOD\020\013\022\r\n\tQEST_MA"
    "RK\020\014\022\r\n\tEXCL_MARK\020\r\022\016\n\nSEMI_COLON\020\016\022\r\n\tD"
    "BL_QUOTE\020\017\022\r\n\tSGL_QUOTE\020\020\022\r\n\tBRKT_OPEN\020\021"
    "\022\016\n\nBRKT_CLOSE\020\022\022\t\n\005SLASH\020\023\022\r\n\tBACKSLASH"
    "\020\024\022\r\n\tBACKSPACE\020\025\022\014\n\010ELLIPSIS\020\026\022\t\n\005ENTER"
    "\020\036\022\t\n\005SPACE\020\037\022\t\n\005MINUS\020 \022\t\n\005EQUAL\020!\022\006\n\002U"
    "P\020(\022\010\n\004DOWN\020)\022\010\n\004LEFT\020*\022\t\n\005RIGHT\020+\022\t\n\005SH"
    "IFT\0202\022\010\n\004CTRL\0203\022\007\n\003ALT\0204b\006proto3"
};
static ::absl::once_flag descriptor_table_msgs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msgs_2eproto = {
    false,
    false,
    1432,
    descriptor_table_protodef_msgs_2eproto,
    "msgs.proto",
    &descriptor_table_msgs_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_msgs_2eproto::offsets,
    file_level_metadata_msgs_2eproto,
    file_level_enum_descriptors_msgs_2eproto,
    file_level_service_descriptors_msgs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msgs_2eproto_getter() {
  return &descriptor_table_msgs_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msgs_2eproto(&descriptor_table_msgs_2eproto);
const ::google::protobuf::EnumDescriptor* KeyEvent_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_msgs_2eproto);
  return file_level_enum_descriptors_msgs_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t KeyEvent_internal_data_[] = {
    1507328u, 224u, 941492096u, 0u, 4294959104u, 127u, 0u, 4294836224u, 2047u, };
bool KeyEvent_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, KeyEvent_internal_data_);
}
// ===================================================================

class CommandToFcitx::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_._oneof_case_);
  static const ::UpdateSessionStatus& update_session_status(const CommandToFcitx* msg);
  static const ::CommitText& commit_text(const CommandToFcitx* msg);
  static const ::UpdatePreedit& update_preedit(const CommandToFcitx* msg);
  static const ::UpdateCandidates& update_candidates(const CommandToFcitx* msg);
};

const ::UpdateSessionStatus& CommandToFcitx::_Internal::update_session_status(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_session_status_;
}
const ::CommitText& CommandToFcitx::_Internal::commit_text(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.commit_text_;
}
const ::UpdatePreedit& CommandToFcitx::_Internal::update_preedit(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_preedit_;
}
const ::UpdateCandidates& CommandToFcitx::_Internal::update_candidates(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_candidates_;
}
void CommandToFcitx::set_allocated_update_session_status(::UpdateSessionStatus* update_session_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_session_status) {
    ::google::protobuf::Arena* submessage_arena = update_session_status->GetArena();
    if (message_arena != submessage_arena) {
      update_session_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_session_status, submessage_arena);
    }
    set_has_update_session_status();
    _impl_.command_.update_session_status_ = update_session_status;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_session_status)
}
void CommandToFcitx::set_allocated_commit_text(::CommitText* commit_text) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (commit_text) {
    ::google::protobuf::Arena* submessage_arena = commit_text->GetArena();
    if (message_arena != submessage_arena) {
      commit_text = ::google::protobuf::internal::GetOwnedMessage(message_arena, commit_text, submessage_arena);
    }
    set_has_commit_text();
    _impl_.command_.commit_text_ = commit_text;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.commit_text)
}
void CommandToFcitx::set_allocated_update_preedit(::UpdatePreedit* update_preedit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_preedit) {
    ::google::protobuf::Arena* submessage_arena = update_preedit->GetArena();
    if (message_arena != submessage_arena) {
      update_preedit = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_preedit, submessage_arena);
    }
    set_has_update_preedit();
    _impl_.command_.update_preedit_ = update_preedit;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_preedit)
}
void CommandToFcitx::set_allocated_update_candidates(::UpdateCandidates* update_candidates) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_candidates) {
    ::google::protobuf::Arena* submessage_arena = update_candidates->GetArena();
    if (message_arena != submessage_arena) {
      update_candidates = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_candidates, submessage_arena);
    }
    set_has_update_candidates();
    _impl_.command_.update_candidates_ = update_candidates;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_candidates)
}
CommandToFcitx::CommandToFcitx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CommandToFcitx)
}
inline PROTOBUF_NDEBUG_INLINE CommandToFcitx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : command_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CommandToFcitx::CommandToFcitx(
    ::google::protobuf::Arena* arena,
    const CommandToFcitx& from)
    : ::google::protobuf::Message(arena) {
  CommandToFcitx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (command_case()) {
    case COMMAND_NOT_SET:
      break;
      case kUpdateSessionStatus:
        _impl_.command_.update_session_status_ = CreateMaybeMessage<::UpdateSessionStatus>(arena, *from._impl_.command_.update_session_status_);
        break;
      case kCommitText:
        _impl_.command_.commit_text_ = CreateMaybeMessage<::CommitText>(arena, *from._impl_.command_.commit_text_);
        break;
      case kUpdatePreedit:
        _impl_.command_.update_preedit_ = CreateMaybeMessage<::UpdatePreedit>(arena, *from._impl_.command_.update_preedit_);
        break;
      case kUpdateCandidates:
        _impl_.command_.update_candidates_ = CreateMaybeMessage<::UpdateCandidates>(arena, *from._impl_.command_.update_candidates_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:CommandToFcitx)
}
inline PROTOBUF_NDEBUG_INLINE CommandToFcitx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : command_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CommandToFcitx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommandToFcitx::~CommandToFcitx() {
  // @@protoc_insertion_point(destructor:CommandToFcitx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandToFcitx::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_command()) {
    clear_command();
  }
  _impl_.~Impl_();
}

void CommandToFcitx::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:CommandToFcitx)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (command_case()) {
    case kUpdateSessionStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_session_status_;
      }
      break;
    }
    case kCommitText: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.commit_text_;
      }
      break;
    }
    case kUpdatePreedit: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_preedit_;
      }
      break;
    }
    case kUpdateCandidates: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_candidates_;
      }
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMMAND_NOT_SET;
}


PROTOBUF_NOINLINE void CommandToFcitx::Clear() {
// @@protoc_insertion_point(message_clear_start:CommandToFcitx)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_command();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommandToFcitx::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> CommandToFcitx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommandToFcitx_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .UpdateSessionStatus update_session_status = 1;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_session_status_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .CommitText commit_text = 2;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.commit_text_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .UpdatePreedit update_preedit = 3;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_preedit_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .UpdateCandidates update_candidates = 4;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_candidates_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::UpdateSessionStatus>()},
    {::_pbi::TcParser::GetTable<::CommitText>()},
    {::_pbi::TcParser::GetTable<::UpdatePreedit>()},
    {::_pbi::TcParser::GetTable<::UpdateCandidates>()},
  }}, {{
  }},
};

::uint8_t* CommandToFcitx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommandToFcitx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (command_case()) {
    case kUpdateSessionStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::update_session_status(this),
          _Internal::update_session_status(this).GetCachedSize(), target, stream);
      break;
    }
    case kCommitText: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::commit_text(this),
          _Internal::commit_text(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdatePreedit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::update_preedit(this),
          _Internal::update_preedit(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateCandidates: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::update_candidates(this),
          _Internal::update_candidates(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandToFcitx)
  return target;
}

::size_t CommandToFcitx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommandToFcitx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (command_case()) {
    // .UpdateSessionStatus update_session_status = 1;
    case kUpdateSessionStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_session_status_);
      break;
    }
    // .CommitText commit_text = 2;
    case kCommitText: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.commit_text_);
      break;
    }
    // .UpdatePreedit update_preedit = 3;
    case kUpdatePreedit: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_preedit_);
      break;
    }
    // .UpdateCandidates update_candidates = 4;
    case kUpdateCandidates: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_candidates_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommandToFcitx::_class_data_ = {
    CommandToFcitx::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommandToFcitx::GetClassData() const {
  return &_class_data_;
}

void CommandToFcitx::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommandToFcitx*>(&to_msg);
  auto& from = static_cast<const CommandToFcitx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CommandToFcitx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.command_case()) {
    case kUpdateSessionStatus: {
      _this->_internal_mutable_update_session_status()->::UpdateSessionStatus::MergeFrom(
          from._internal_update_session_status());
      break;
    }
    case kCommitText: {
      _this->_internal_mutable_commit_text()->::CommitText::MergeFrom(
          from._internal_commit_text());
      break;
    }
    case kUpdatePreedit: {
      _this->_internal_mutable_update_preedit()->::UpdatePreedit::MergeFrom(
          from._internal_update_preedit());
      break;
    }
    case kUpdateCandidates: {
      _this->_internal_mutable_update_candidates()->::UpdateCandidates::MergeFrom(
          from._internal_update_candidates());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandToFcitx::CopyFrom(const CommandToFcitx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommandToFcitx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommandToFcitx::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommandToFcitx::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommandToFcitx::InternalSwap(CommandToFcitx* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.command_, other->_impl_.command_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CommandToFcitx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[0]);
}
// ===================================================================

class CommitText::_Internal {
 public:
};

CommitText::CommitText(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CommitText)
}
inline PROTOBUF_NDEBUG_INLINE CommitText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

CommitText::CommitText(
    ::google::protobuf::Arena* arena,
    const CommitText& from)
    : ::google::protobuf::Message(arena) {
  CommitText* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:CommitText)
}
inline PROTOBUF_NDEBUG_INLINE CommitText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void CommitText::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommitText::~CommitText() {
  // @@protoc_insertion_point(destructor:CommitText)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommitText::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommitText::Clear() {
// @@protoc_insertion_point(message_clear_start:CommitText)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommitText::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 23, 2> CommitText::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommitText_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommitText, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(CommitText, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\4\0\0\0\0\0\0"
    "CommitText"
    "text"
  }},
};

::uint8_t* CommitText::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommitText)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CommitText.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommitText)
  return target;
}

::size_t CommitText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommitText)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommitText::_class_data_ = {
    CommitText::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommitText::GetClassData() const {
  return &_class_data_;
}

void CommitText::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommitText*>(&to_msg);
  auto& from = static_cast<const CommitText&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CommitText)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitText::CopyFrom(const CommitText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommitText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommitText::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommitText::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommitText::InternalSwap(CommitText* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata CommitText::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[1]);
}
// ===================================================================

class UpdatePreedit::_Internal {
 public:
};

UpdatePreedit::UpdatePreedit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdatePreedit)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePreedit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

UpdatePreedit::UpdatePreedit(
    ::google::protobuf::Arena* arena,
    const UpdatePreedit& from)
    : ::google::protobuf::Message(arena) {
  UpdatePreedit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:UpdatePreedit)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePreedit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void UpdatePreedit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdatePreedit::~UpdatePreedit() {
  // @@protoc_insertion_point(destructor:UpdatePreedit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdatePreedit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdatePreedit::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdatePreedit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdatePreedit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> UpdatePreedit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdatePreedit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdatePreedit, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(UpdatePreedit, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "UpdatePreedit"
    "text"
  }},
};

::uint8_t* UpdatePreedit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdatePreedit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UpdatePreedit.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdatePreedit)
  return target;
}

::size_t UpdatePreedit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdatePreedit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdatePreedit::_class_data_ = {
    UpdatePreedit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdatePreedit::GetClassData() const {
  return &_class_data_;
}

void UpdatePreedit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdatePreedit*>(&to_msg);
  auto& from = static_cast<const UpdatePreedit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdatePreedit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePreedit::CopyFrom(const UpdatePreedit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdatePreedit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdatePreedit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdatePreedit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdatePreedit::InternalSwap(UpdatePreedit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata UpdatePreedit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[2]);
}
// ===================================================================

class UpdateSessionStatus::_Internal {
 public:
};

UpdateSessionStatus::UpdateSessionStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdateSessionStatus)
}
UpdateSessionStatus::UpdateSessionStatus(
    ::google::protobuf::Arena* arena, const UpdateSessionStatus& from)
    : UpdateSessionStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UpdateSessionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateSessionStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.in_session_ = {};
}
UpdateSessionStatus::~UpdateSessionStatus() {
  // @@protoc_insertion_point(destructor:UpdateSessionStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateSessionStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateSessionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateSessionStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_session_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateSessionStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> UpdateSessionStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateSessionStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool in_session = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpdateSessionStatus, _impl_.in_session_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSessionStatus, _impl_.in_session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool in_session = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateSessionStatus, _impl_.in_session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UpdateSessionStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateSessionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool in_session = 1;
  if (this->_internal_in_session() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_in_session(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateSessionStatus)
  return target;
}

::size_t UpdateSessionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateSessionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool in_session = 1;
  if (this->_internal_in_session() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateSessionStatus::_class_data_ = {
    UpdateSessionStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateSessionStatus::GetClassData() const {
  return &_class_data_;
}

void UpdateSessionStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateSessionStatus*>(&to_msg);
  auto& from = static_cast<const UpdateSessionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdateSessionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_in_session() != 0) {
    _this->_internal_set_in_session(from._internal_in_session());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSessionStatus::CopyFrom(const UpdateSessionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateSessionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateSessionStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateSessionStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateSessionStatus::InternalSwap(UpdateSessionStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.in_session_, other->_impl_.in_session_);
}

::google::protobuf::Metadata UpdateSessionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[3]);
}
// ===================================================================

class UpdateCandidates::_Internal {
 public:
};

UpdateCandidates::UpdateCandidates(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdateCandidates)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCandidates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : candidates_{visibility, arena, from.candidates_},
        _cached_size_{0} {}

UpdateCandidates::UpdateCandidates(
    ::google::protobuf::Arena* arena,
    const UpdateCandidates& from)
    : ::google::protobuf::Message(arena) {
  UpdateCandidates* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:UpdateCandidates)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCandidates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : candidates_{visibility, arena},
        _cached_size_{0} {}

inline void UpdateCandidates::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateCandidates::~UpdateCandidates() {
  // @@protoc_insertion_point(destructor:UpdateCandidates)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateCandidates::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateCandidates::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateCandidates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateCandidates::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> UpdateCandidates::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateCandidates_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string candidates = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCandidates, _impl_.candidates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string candidates = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateCandidates, _impl_.candidates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\20\12\0\0\0\0\0\0"
    "UpdateCandidates"
    "candidates"
  }},
};

::uint8_t* UpdateCandidates::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateCandidates)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string candidates = 1;
  for (int i = 0, n = this->_internal_candidates_size(); i < n; ++i) {
    const auto& s = this->_internal_candidates().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UpdateCandidates.candidates");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateCandidates)
  return target;
}

::size_t UpdateCandidates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateCandidates)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string candidates = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_candidates().size());
  for (int i = 0, n = _internal_candidates().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_candidates().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateCandidates::_class_data_ = {
    UpdateCandidates::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateCandidates::GetClassData() const {
  return &_class_data_;
}

void UpdateCandidates::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateCandidates*>(&to_msg);
  auto& from = static_cast<const UpdateCandidates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdateCandidates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_candidates()->MergeFrom(from._internal_candidates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCandidates::CopyFrom(const UpdateCandidates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateCandidates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateCandidates::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateCandidates::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateCandidates::InternalSwap(UpdateCandidates* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candidates_.InternalSwap(&other->_impl_.candidates_);
}

::google::protobuf::Metadata UpdateCandidates::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[4]);
}
// ===================================================================

class FcitxEvent::_Internal {
 public:
};

FcitxEvent::FcitxEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FcitxEvent)
}
FcitxEvent::FcitxEvent(
    ::google::protobuf::Arena* arena, const FcitxEvent& from)
    : FcitxEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FcitxEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FcitxEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_ = {};
}
FcitxEvent::~FcitxEvent() {
  // @@protoc_insertion_point(destructor:FcitxEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FcitxEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FcitxEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:FcitxEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FcitxEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FcitxEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FcitxEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .KeyEvent event = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FcitxEvent, _impl_.event_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FcitxEvent, _impl_.event_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .KeyEvent event = 1;
    {PROTOBUF_FIELD_OFFSET(FcitxEvent, _impl_.event_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FcitxEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FcitxEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .KeyEvent event = 1;
  if (this->_internal_event() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_event(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FcitxEvent)
  return target;
}

::size_t FcitxEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FcitxEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .KeyEvent event = 1;
  if (this->_internal_event() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_event());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FcitxEvent::_class_data_ = {
    FcitxEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FcitxEvent::GetClassData() const {
  return &_class_data_;
}

void FcitxEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FcitxEvent*>(&to_msg);
  auto& from = static_cast<const FcitxEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FcitxEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_event() != 0) {
    _this->_internal_set_event(from._internal_event());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FcitxEvent::CopyFrom(const FcitxEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FcitxEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FcitxEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FcitxEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FcitxEvent::InternalSwap(FcitxEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.event_, other->_impl_.event_);
}

::google::protobuf::Metadata FcitxEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msgs_2eproto_getter, &descriptor_table_msgs_2eproto_once,
      file_level_metadata_msgs_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
