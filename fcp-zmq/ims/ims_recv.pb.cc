// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ims_recv.proto

#include "ims_recv.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UpdatePreedit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdatePreedit::UpdatePreedit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdatePreeditDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePreeditDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePreeditDefaultTypeInternal() {}
  union {
    UpdatePreedit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePreeditDefaultTypeInternal _UpdatePreedit_default_instance_;

inline constexpr UpdateAux::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : candidates_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAux::UpdateAux(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateAuxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAuxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAuxDefaultTypeInternal() {}
  union {
    UpdateAux _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAuxDefaultTypeInternal _UpdateAux_default_instance_;

inline constexpr LookupTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : candidates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LookupTable::LookupTable(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LookupTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LookupTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LookupTableDefaultTypeInternal() {}
  union {
    LookupTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LookupTableDefaultTypeInternal _LookupTable_default_instance_;

inline constexpr CommitText::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommitText::CommitText(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommitTextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitTextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitTextDefaultTypeInternal() {}
  union {
    CommitText _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitTextDefaultTypeInternal _CommitText_default_instance_;

inline constexpr UpdateLookuptable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lt_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateLookuptable::UpdateLookuptable(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateLookuptableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLookuptableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLookuptableDefaultTypeInternal() {}
  union {
    UpdateLookuptable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLookuptableDefaultTypeInternal _UpdateLookuptable_default_instance_;

inline constexpr CommandToFcitx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : command_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CommandToFcitx::CommandToFcitx(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandToFcitxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandToFcitxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandToFcitxDefaultTypeInternal() {}
  union {
    CommandToFcitx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandToFcitxDefaultTypeInternal _CommandToFcitx_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fims_5frecv_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fims_5frecv_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fims_5frecv_2eproto = nullptr;
const ::uint32_t TableStruct_proto_2fims_5frecv_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_.command_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CommitText, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CommitText, _impl_.text_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdatePreedit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdatePreedit, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::UpdateLookuptable, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::UpdateLookuptable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdateLookuptable, _impl_.lt_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdateAux, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdateAux, _impl_.candidates_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::LookupTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::LookupTable, _impl_.candidates_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::CommandToFcitx)},
        {13, -1, -1, sizeof(::CommitText)},
        {22, -1, -1, sizeof(::UpdatePreedit)},
        {31, 40, -1, sizeof(::UpdateLookuptable)},
        {41, -1, -1, sizeof(::UpdateAux)},
        {50, -1, -1, sizeof(::LookupTable)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_CommandToFcitx_default_instance_._instance,
    &::_CommitText_default_instance_._instance,
    &::_UpdatePreedit_default_instance_._instance,
    &::_UpdateLookuptable_default_instance_._instance,
    &::_UpdateAux_default_instance_._instance,
    &::_LookupTable_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fims_5frecv_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\024proto/ims_recv.proto\"\264\001\n\016CommandToFcit"
    "x\022\"\n\013commit_text\030\001 \001(\0132\013.CommitTextH\000\022(\n"
    "\016update_preedit\030\002 \001(\0132\016.UpdatePreeditH\000\022"
    "\'\n\tupdate_lt\030\003 \001(\0132\022.UpdateLookuptableH\000"
    "\022 \n\nupdate_aux\030\004 \001(\0132\n.UpdateAuxH\000B\t\n\007co"
    "mmand\"\032\n\nCommitText\022\014\n\004text\030\001 \001(\t\"\035\n\rUpd"
    "atePreedit\022\014\n\004text\030\001 \001(\t\"-\n\021UpdateLookup"
    "table\022\030\n\002lt\030\001 \001(\0132\014.LookupTable\"\037\n\tUpdat"
    "eAux\022\022\n\ncandidates\030\001 \001(\t\"!\n\013LookupTable\022"
    "\022\n\ncandidates\030\001 \003(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fims_5frecv_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fims_5frecv_2eproto = {
    false,
    false,
    387,
    descriptor_table_protodef_proto_2fims_5frecv_2eproto,
    "proto/ims_recv.proto",
    &descriptor_table_proto_2fims_5frecv_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_proto_2fims_5frecv_2eproto::offsets,
    file_level_metadata_proto_2fims_5frecv_2eproto,
    file_level_enum_descriptors_proto_2fims_5frecv_2eproto,
    file_level_service_descriptors_proto_2fims_5frecv_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fims_5frecv_2eproto_getter() {
  return &descriptor_table_proto_2fims_5frecv_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fims_5frecv_2eproto(&descriptor_table_proto_2fims_5frecv_2eproto);
// ===================================================================

class CommandToFcitx::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::CommandToFcitx, _impl_._oneof_case_);
  static const ::CommitText& commit_text(const CommandToFcitx* msg);
  static const ::UpdatePreedit& update_preedit(const CommandToFcitx* msg);
  static const ::UpdateLookuptable& update_lt(const CommandToFcitx* msg);
  static const ::UpdateAux& update_aux(const CommandToFcitx* msg);
};

const ::CommitText& CommandToFcitx::_Internal::commit_text(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.commit_text_;
}
const ::UpdatePreedit& CommandToFcitx::_Internal::update_preedit(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_preedit_;
}
const ::UpdateLookuptable& CommandToFcitx::_Internal::update_lt(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_lt_;
}
const ::UpdateAux& CommandToFcitx::_Internal::update_aux(const CommandToFcitx* msg) {
  return *msg->_impl_.command_.update_aux_;
}
void CommandToFcitx::set_allocated_commit_text(::CommitText* commit_text) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (commit_text) {
    ::google::protobuf::Arena* submessage_arena = commit_text->GetArena();
    if (message_arena != submessage_arena) {
      commit_text = ::google::protobuf::internal::GetOwnedMessage(message_arena, commit_text, submessage_arena);
    }
    set_has_commit_text();
    _impl_.command_.commit_text_ = commit_text;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.commit_text)
}
void CommandToFcitx::set_allocated_update_preedit(::UpdatePreedit* update_preedit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_preedit) {
    ::google::protobuf::Arena* submessage_arena = update_preedit->GetArena();
    if (message_arena != submessage_arena) {
      update_preedit = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_preedit, submessage_arena);
    }
    set_has_update_preedit();
    _impl_.command_.update_preedit_ = update_preedit;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_preedit)
}
void CommandToFcitx::set_allocated_update_lt(::UpdateLookuptable* update_lt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_lt) {
    ::google::protobuf::Arena* submessage_arena = update_lt->GetArena();
    if (message_arena != submessage_arena) {
      update_lt = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_lt, submessage_arena);
    }
    set_has_update_lt();
    _impl_.command_.update_lt_ = update_lt;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_lt)
}
void CommandToFcitx::set_allocated_update_aux(::UpdateAux* update_aux) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_command();
  if (update_aux) {
    ::google::protobuf::Arena* submessage_arena = update_aux->GetArena();
    if (message_arena != submessage_arena) {
      update_aux = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_aux, submessage_arena);
    }
    set_has_update_aux();
    _impl_.command_.update_aux_ = update_aux;
  }
  // @@protoc_insertion_point(field_set_allocated:CommandToFcitx.update_aux)
}
CommandToFcitx::CommandToFcitx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CommandToFcitx)
}
inline PROTOBUF_NDEBUG_INLINE CommandToFcitx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : command_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CommandToFcitx::CommandToFcitx(
    ::google::protobuf::Arena* arena,
    const CommandToFcitx& from)
    : ::google::protobuf::Message(arena) {
  CommandToFcitx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (command_case()) {
    case COMMAND_NOT_SET:
      break;
      case kCommitText:
        _impl_.command_.commit_text_ = CreateMaybeMessage<::CommitText>(arena, *from._impl_.command_.commit_text_);
        break;
      case kUpdatePreedit:
        _impl_.command_.update_preedit_ = CreateMaybeMessage<::UpdatePreedit>(arena, *from._impl_.command_.update_preedit_);
        break;
      case kUpdateLt:
        _impl_.command_.update_lt_ = CreateMaybeMessage<::UpdateLookuptable>(arena, *from._impl_.command_.update_lt_);
        break;
      case kUpdateAux:
        _impl_.command_.update_aux_ = CreateMaybeMessage<::UpdateAux>(arena, *from._impl_.command_.update_aux_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:CommandToFcitx)
}
inline PROTOBUF_NDEBUG_INLINE CommandToFcitx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : command_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CommandToFcitx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommandToFcitx::~CommandToFcitx() {
  // @@protoc_insertion_point(destructor:CommandToFcitx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandToFcitx::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_command()) {
    clear_command();
  }
  _impl_.~Impl_();
}

void CommandToFcitx::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:CommandToFcitx)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (command_case()) {
    case kCommitText: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.commit_text_;
      }
      break;
    }
    case kUpdatePreedit: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_preedit_;
      }
      break;
    }
    case kUpdateLt: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_lt_;
      }
      break;
    }
    case kUpdateAux: {
      if (GetArena() == nullptr) {
        delete _impl_.command_.update_aux_;
      }
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMMAND_NOT_SET;
}


PROTOBUF_NOINLINE void CommandToFcitx::Clear() {
// @@protoc_insertion_point(message_clear_start:CommandToFcitx)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_command();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommandToFcitx::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> CommandToFcitx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommandToFcitx_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .CommitText commit_text = 1;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.commit_text_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .UpdatePreedit update_preedit = 2;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_preedit_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .UpdateLookuptable update_lt = 3;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_lt_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .UpdateAux update_aux = 4;
    {PROTOBUF_FIELD_OFFSET(CommandToFcitx, _impl_.command_.update_aux_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CommitText>()},
    {::_pbi::TcParser::GetTable<::UpdatePreedit>()},
    {::_pbi::TcParser::GetTable<::UpdateLookuptable>()},
    {::_pbi::TcParser::GetTable<::UpdateAux>()},
  }}, {{
  }},
};

::uint8_t* CommandToFcitx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommandToFcitx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (command_case()) {
    case kCommitText: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::commit_text(this),
          _Internal::commit_text(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdatePreedit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::update_preedit(this),
          _Internal::update_preedit(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateLt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::update_lt(this),
          _Internal::update_lt(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateAux: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::update_aux(this),
          _Internal::update_aux(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommandToFcitx)
  return target;
}

::size_t CommandToFcitx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommandToFcitx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (command_case()) {
    // .CommitText commit_text = 1;
    case kCommitText: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.commit_text_);
      break;
    }
    // .UpdatePreedit update_preedit = 2;
    case kUpdatePreedit: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_preedit_);
      break;
    }
    // .UpdateLookuptable update_lt = 3;
    case kUpdateLt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_lt_);
      break;
    }
    // .UpdateAux update_aux = 4;
    case kUpdateAux: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.command_.update_aux_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommandToFcitx::_class_data_ = {
    CommandToFcitx::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommandToFcitx::GetClassData() const {
  return &_class_data_;
}

void CommandToFcitx::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommandToFcitx*>(&to_msg);
  auto& from = static_cast<const CommandToFcitx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CommandToFcitx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.command_case()) {
    case kCommitText: {
      _this->_internal_mutable_commit_text()->::CommitText::MergeFrom(
          from._internal_commit_text());
      break;
    }
    case kUpdatePreedit: {
      _this->_internal_mutable_update_preedit()->::UpdatePreedit::MergeFrom(
          from._internal_update_preedit());
      break;
    }
    case kUpdateLt: {
      _this->_internal_mutable_update_lt()->::UpdateLookuptable::MergeFrom(
          from._internal_update_lt());
      break;
    }
    case kUpdateAux: {
      _this->_internal_mutable_update_aux()->::UpdateAux::MergeFrom(
          from._internal_update_aux());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandToFcitx::CopyFrom(const CommandToFcitx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommandToFcitx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommandToFcitx::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommandToFcitx::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommandToFcitx::InternalSwap(CommandToFcitx* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.command_, other->_impl_.command_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CommandToFcitx::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[0]);
}
// ===================================================================

class CommitText::_Internal {
 public:
};

CommitText::CommitText(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CommitText)
}
inline PROTOBUF_NDEBUG_INLINE CommitText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

CommitText::CommitText(
    ::google::protobuf::Arena* arena,
    const CommitText& from)
    : ::google::protobuf::Message(arena) {
  CommitText* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:CommitText)
}
inline PROTOBUF_NDEBUG_INLINE CommitText::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void CommitText::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommitText::~CommitText() {
  // @@protoc_insertion_point(destructor:CommitText)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommitText::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CommitText::Clear() {
// @@protoc_insertion_point(message_clear_start:CommitText)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommitText::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 23, 2> CommitText::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommitText_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommitText, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(CommitText, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\4\0\0\0\0\0\0"
    "CommitText"
    "text"
  }},
};

::uint8_t* CommitText::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CommitText)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CommitText.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CommitText)
  return target;
}

::size_t CommitText::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CommitText)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommitText::_class_data_ = {
    CommitText::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CommitText::GetClassData() const {
  return &_class_data_;
}

void CommitText::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommitText*>(&to_msg);
  auto& from = static_cast<const CommitText&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CommitText)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitText::CopyFrom(const CommitText& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommitText)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommitText::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CommitText::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CommitText::InternalSwap(CommitText* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata CommitText::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[1]);
}
// ===================================================================

class UpdatePreedit::_Internal {
 public:
};

UpdatePreedit::UpdatePreedit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdatePreedit)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePreedit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : text_(arena, from.text_),
        _cached_size_{0} {}

UpdatePreedit::UpdatePreedit(
    ::google::protobuf::Arena* arena,
    const UpdatePreedit& from)
    : ::google::protobuf::Message(arena) {
  UpdatePreedit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:UpdatePreedit)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePreedit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void UpdatePreedit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdatePreedit::~UpdatePreedit() {
  // @@protoc_insertion_point(destructor:UpdatePreedit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdatePreedit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdatePreedit::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdatePreedit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdatePreedit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> UpdatePreedit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdatePreedit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdatePreedit, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(UpdatePreedit, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "UpdatePreedit"
    "text"
  }},
};

::uint8_t* UpdatePreedit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdatePreedit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UpdatePreedit.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdatePreedit)
  return target;
}

::size_t UpdatePreedit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdatePreedit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdatePreedit::_class_data_ = {
    UpdatePreedit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdatePreedit::GetClassData() const {
  return &_class_data_;
}

void UpdatePreedit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdatePreedit*>(&to_msg);
  auto& from = static_cast<const UpdatePreedit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdatePreedit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePreedit::CopyFrom(const UpdatePreedit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdatePreedit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdatePreedit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdatePreedit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdatePreedit::InternalSwap(UpdatePreedit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata UpdatePreedit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[2]);
}
// ===================================================================

class UpdateLookuptable::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateLookuptable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateLookuptable, _impl_._has_bits_);
  static const ::LookupTable& lt(const UpdateLookuptable* msg);
  static void set_has_lt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::LookupTable& UpdateLookuptable::_Internal::lt(const UpdateLookuptable* msg) {
  return *msg->_impl_.lt_;
}
UpdateLookuptable::UpdateLookuptable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdateLookuptable)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLookuptable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateLookuptable::UpdateLookuptable(
    ::google::protobuf::Arena* arena,
    const UpdateLookuptable& from)
    : ::google::protobuf::Message(arena) {
  UpdateLookuptable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.lt_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::LookupTable>(arena, *from._impl_.lt_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:UpdateLookuptable)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLookuptable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateLookuptable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lt_ = {};
}
UpdateLookuptable::~UpdateLookuptable() {
  // @@protoc_insertion_point(destructor:UpdateLookuptable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateLookuptable::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.lt_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateLookuptable::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateLookuptable)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.lt_ != nullptr);
    _impl_.lt_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateLookuptable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateLookuptable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateLookuptable, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateLookuptable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .LookupTable lt = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateLookuptable, _impl_.lt_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .LookupTable lt = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateLookuptable, _impl_.lt_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::LookupTable>()},
  }}, {{
  }},
};

::uint8_t* UpdateLookuptable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateLookuptable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .LookupTable lt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::lt(this),
        _Internal::lt(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateLookuptable)
  return target;
}

::size_t UpdateLookuptable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateLookuptable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .LookupTable lt = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lt_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateLookuptable::_class_data_ = {
    UpdateLookuptable::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateLookuptable::GetClassData() const {
  return &_class_data_;
}

void UpdateLookuptable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateLookuptable*>(&to_msg);
  auto& from = static_cast<const UpdateLookuptable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdateLookuptable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_lt()->::LookupTable::MergeFrom(
        from._internal_lt());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLookuptable::CopyFrom(const UpdateLookuptable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateLookuptable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateLookuptable::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateLookuptable::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateLookuptable::InternalSwap(UpdateLookuptable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lt_, other->_impl_.lt_);
}

::google::protobuf::Metadata UpdateLookuptable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[3]);
}
// ===================================================================

class UpdateAux::_Internal {
 public:
};

UpdateAux::UpdateAux(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdateAux)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAux::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : candidates_(arena, from.candidates_),
        _cached_size_{0} {}

UpdateAux::UpdateAux(
    ::google::protobuf::Arena* arena,
    const UpdateAux& from)
    : ::google::protobuf::Message(arena) {
  UpdateAux* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:UpdateAux)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAux::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : candidates_(arena),
        _cached_size_{0} {}

inline void UpdateAux::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateAux::~UpdateAux() {
  // @@protoc_insertion_point(destructor:UpdateAux)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateAux::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.candidates_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateAux::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateAux)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidates_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateAux::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 28, 2> UpdateAux::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateAux_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string candidates = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateAux, _impl_.candidates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string candidates = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateAux, _impl_.candidates_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\12\0\0\0\0\0\0"
    "UpdateAux"
    "candidates"
  }},
};

::uint8_t* UpdateAux::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateAux)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string candidates = 1;
  if (!this->_internal_candidates().empty()) {
    const std::string& _s = this->_internal_candidates();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UpdateAux.candidates");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateAux)
  return target;
}

::size_t UpdateAux::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateAux)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string candidates = 1;
  if (!this->_internal_candidates().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_candidates());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateAux::_class_data_ = {
    UpdateAux::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateAux::GetClassData() const {
  return &_class_data_;
}

void UpdateAux::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateAux*>(&to_msg);
  auto& from = static_cast<const UpdateAux&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdateAux)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_candidates().empty()) {
    _this->_internal_set_candidates(from._internal_candidates());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAux::CopyFrom(const UpdateAux& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateAux)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateAux::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateAux::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateAux::InternalSwap(UpdateAux* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.candidates_, &other->_impl_.candidates_, arena);
}

::google::protobuf::Metadata UpdateAux::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[4]);
}
// ===================================================================

class LookupTable::_Internal {
 public:
};

LookupTable::LookupTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LookupTable)
}
inline PROTOBUF_NDEBUG_INLINE LookupTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : candidates_{visibility, arena, from.candidates_},
        _cached_size_{0} {}

LookupTable::LookupTable(
    ::google::protobuf::Arena* arena,
    const LookupTable& from)
    : ::google::protobuf::Message(arena) {
  LookupTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:LookupTable)
}
inline PROTOBUF_NDEBUG_INLINE LookupTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : candidates_{visibility, arena},
        _cached_size_{0} {}

inline void LookupTable::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LookupTable::~LookupTable() {
  // @@protoc_insertion_point(destructor:LookupTable)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LookupTable::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void LookupTable::Clear() {
// @@protoc_insertion_point(message_clear_start:LookupTable)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candidates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LookupTable::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 30, 2> LookupTable::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LookupTable_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string candidates = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LookupTable, _impl_.candidates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string candidates = 1;
    {PROTOBUF_FIELD_OFFSET(LookupTable, _impl_.candidates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\13\12\0\0\0\0\0\0"
    "LookupTable"
    "candidates"
  }},
};

::uint8_t* LookupTable::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LookupTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string candidates = 1;
  for (int i = 0, n = this->_internal_candidates_size(); i < n; ++i) {
    const auto& s = this->_internal_candidates().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LookupTable.candidates");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LookupTable)
  return target;
}

::size_t LookupTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LookupTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string candidates = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_candidates().size());
  for (int i = 0, n = _internal_candidates().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_candidates().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LookupTable::_class_data_ = {
    LookupTable::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* LookupTable::GetClassData() const {
  return &_class_data_;
}

void LookupTable::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LookupTable*>(&to_msg);
  auto& from = static_cast<const LookupTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LookupTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_candidates()->MergeFrom(from._internal_candidates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LookupTable::CopyFrom(const LookupTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LookupTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LookupTable::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* LookupTable::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void LookupTable::InternalSwap(LookupTable* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candidates_.InternalSwap(&other->_impl_.candidates_);
}

::google::protobuf::Metadata LookupTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fims_5frecv_2eproto_getter, &descriptor_table_proto_2fims_5frecv_2eproto_once,
      file_level_metadata_proto_2fims_5frecv_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
